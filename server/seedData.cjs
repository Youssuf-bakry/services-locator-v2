const mongoose = require('mongoose');
const FoodCategory = require('./models/FoodCategory');
const Business = require('./models/Business');

// Connect to MongoDB
async function connectDB() {
  try {
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/food-locator');
    console.log('โ Connected to MongoDB');
  } catch (error) {
    console.error('โ MongoDB connection error:', error);
    process.exit(1);
  }
}

// Food categories based on your Excel classification
const foodCategoriesData = [
  // Main Categories - ุงูุชุตูููุงุช ุงูุฃุณุงุณูุฉ
  {
    nameAr: 'ุฅูุทุงุฑ',
    nameEn: 'Breakfast',
    slug: 'breakfast',
    categoryType: 'main_category',
    mainCategory: 'ุฅูุทุงุฑ',
    description: 'ูุฌุจุงุช ุงูุฅูุทุงุฑ ูุงููุฎุจูุฒุงุช ุงูุตุจุงุญูุฉ',
    icon: '๐ณ',
    color: '#FF9800',
    sortOrder: 1
  },
  {
    nameAr: 'ูุฌุจุฉ ุฑุฆูุณูุฉ',
    nameEn: 'Main Meal',
    slug: 'main-meal',
    categoryType: 'main_category',
    mainCategory: 'ูุฌุจุฉ ุฑุฆูุณูุฉ',
    description: 'ุงููุฌุจุงุช ุงูุฑุฆูุณูุฉ ููุบุฏุงุก ูุงูุนุดุงุก',
    icon: '๐ฝ๏ธ',
    color: '#4CAF50',
    sortOrder: 2
  },
  {
    nameAr: 'ูุดุฑูุจ',
    nameEn: 'Beverage',
    slug: 'beverage',
    categoryType: 'main_category',
    mainCategory: 'ูุดุฑูุจ',
    description: 'ุงููุดุฑูุจุงุช ุงูุณุงุฎูุฉ ูุงูุจุงุฑุฏุฉ',
    icon: 'โ',
    color: '#795548',
    sortOrder: 3
  },
  {
    nameAr: 'ุญูููุงุช',
    nameEn: 'Desserts',
    slug: 'desserts',
    categoryType: 'main_category',
    mainCategory: 'ุญูููุงุช',
    description: 'ุงูุญูููุงุช ูุงูููู ูุงูุขูุณ ูุฑูู',
    icon: '๐ฐ',
    color: '#E91E63',
    sortOrder: 4
  },
  {
    nameAr: 'ุณูุงู',
    nameEn: 'Snacks',
    slug: 'snacks',
    categoryType: 'main_category',
    mainCategory: 'ุณูุงู',
    description: 'ุงููุฌุจุงุช ุงูุฎูููุฉ ูุงูุชุณุงูู',
    icon: '๐ฟ',
    color: '#FF5722',
    sortOrder: 5
  },

  // Sub Categories - ุงูุชุตูููุงุช ุงููุฑุนูุฉ
  {
    nameAr: 'ูุฎุจูุฒุงุช',
    nameEn: 'Baked Goods',
    slug: 'baked-goods',
    categoryType: 'sub_category',
    subCategory: 'ูุฎุจูุฒุงุช',
    description: 'ุงูุฎุจุฒ ูุงููุนุฌูุงุช ูุงูููู',
    icon: '๐ฅ',
    color: '#FFC107'
  },
  {
    nameAr: 'ูุญูู',
    nameEn: 'Meat',
    slug: 'meat',
    categoryType: 'sub_category',
    subCategory: 'ูุญูู',
    description: 'ุฃุทุจุงู ุงููุญูู ุงูุญูุฑุงุก',
    icon: '๐ฅฉ',
    color: '#8BC34A'
  },
  {
    nameAr: 'ุฏูุงุฌู',
    nameEn: 'Poultry',
    slug: 'poultry',
    categoryType: 'sub_category',
    subCategory: 'ุฏูุงุฌู',
    description: 'ุงูุฏุฌุงุฌ ูุงูุทููุฑ',
    icon: '๐',
    color: '#CDDC39'
  },
  {
    nameAr: 'ุฃุฑุฒ/ุนุฏุณ',
    nameEn: 'Rice/Lentils',
    slug: 'rice-lentils',
    categoryType: 'sub_category',
    subCategory: 'ุฃุฑุฒ/ุนุฏุณ',
    description: 'ุฃุทุจุงู ุงูุฃุฑุฒ ูุงูุนุฏุณ ูุงูุญุจูุจ',
    icon: '๐',
    color: '#8BC34A'
  },
  {
    nameAr: 'ุณุงูุฏูุชุด',
    nameEn: 'Sandwich',
    slug: 'sandwich',
    categoryType: 'sub_category',
    subCategory: 'ุณุงูุฏูุชุด',
    description: 'ุงูุณุงูุฏูุชุดุงุช ูุงูููุงุฆู',
    icon: '๐ฅช',
    color: '#FF9800'
  },
  {
    nameAr: 'ุณุงุฎู',
    nameEn: 'Hot Drinks',
    slug: 'hot-drinks',
    categoryType: 'sub_category',
    subCategory: 'ุณุงุฎู',
    description: 'ุงููุดุฑูุจุงุช ุงูุณุงุฎูุฉ',
    icon: 'โ',
    color: '#795548'
  },
  {
    nameAr: 'ุจุงุฑุฏ',
    nameEn: 'Cold Drinks',
    slug: 'cold-drinks',
    categoryType: 'sub_category',
    subCategory: 'ุจุงุฑุฏ',
    description: 'ุงููุดุฑูุจุงุช ุงูุจุงุฑุฏุฉ ูุงูุนุตุงุฆุฑ',
    icon: '๐ฅค',
    color: '#2196F3'
  },

  // Dietary Patterns - ุงูุฃููุงุท ุงูุบุฐุงุฆูุฉ
  {
    nameAr: 'ุนุงุฏู',
    nameEn: 'Regular',
    slug: 'regular',
    categoryType: 'dietary_pattern',
    dietaryPattern: 'ุนุงุฏู',
    description: 'ุทุนุงู ุนุงุฏู ุจุฏูู ูููุฏ ุบุฐุงุฆูุฉ',
    icon: '๐ฝ๏ธ',
    color: '#9E9E9E'
  },
  {
    nameAr: 'ุตุญู',
    nameEn: 'Healthy',
    slug: 'healthy',
    categoryType: 'dietary_pattern',
    dietaryPattern: 'ุตุญู',
    description: 'ุทุนุงู ุตุญู ูููู ุงูุณุนุฑุงุช',
    icon: '๐ฅ',
    color: '#4CAF50'
  },
  {
    nameAr: 'ูุจุงุชู',
    nameEn: 'Vegetarian',
    slug: 'vegetarian',
    categoryType: 'dietary_pattern',
    dietaryPattern: 'ูุจุงุชู',
    description: 'ุทุนุงู ูุจุงุชู ุฎุงูู ูู ุงููุญูู',
    icon: '๐ฑ',
    color: '#8BC34A'
  },

  // Meal Times - ุฃููุงุช ุงููุฌุจุงุช
  {
    nameAr: 'ุตุจุงุญ',
    nameEn: 'Morning',
    slug: 'morning',
    categoryType: 'meal_time',
    mealTime: 'ุตุจุงุญ',
    description: 'ูุฌุจุงุช ุงูุตุจุงุญ ูุงูุฅูุทุงุฑ',
    icon: '๐',
    color: '#FF9800'
  },
  {
    nameAr: 'ุบุฏุงุก',
    nameEn: 'Lunch',
    slug: 'lunch',
    categoryType: 'meal_time',
    mealTime: 'ุบุฏุงุก',
    description: 'ูุฌุจุงุช ุงูุบุฏุงุก',
    icon: '๐',
    color: '#FFC107'
  },
  {
    nameAr: 'ุนุดุงุก',
    nameEn: 'Dinner',
    slug: 'dinner',
    categoryType: 'meal_time',
    mealTime: 'ุนุดุงุก',
    description: 'ูุฌุจุงุช ุงูุนุดุงุก',
    icon: '๐',
    color: '#3F51B5'
  },
  {
    nameAr: 'ุฃู ููุช',
    nameEn: 'Anytime',
    slug: 'anytime',
    categoryType: 'meal_time',
    mealTime: 'ุฃู ููุช',
    description: 'ูุชุงุญ ูู ุฃู ููุช',
    icon: 'โฐ',
    color: '#607D8B'
  }
];

// Sample menu items based on your Excel data
const sampleMenuItems = [
  {
    name: 'ูุงูู',
    description: 'ูุงูู ุทุงุฒุฌ ูุน ุงูุนุณู ูุงูููุงูู',
    category: { mainCategory: 'ุฅูุทุงุฑ', subCategory: 'ูุฎุจูุฒุงุช' },
    dietaryPattern: 'ุนุงุฏู',
    mealTime: 'ุตุจุงุญ',
    additionalTags: ['ุญูููุงุช', 'ุบุฑุจู'],
    price: 25
  },
  {
    name: 'ูููุฉ ุนุฑุจูุฉ',
    description: 'ูููุฉ ุนุฑุจูุฉ ุฃุตููุฉ ูุน ุงูููู',
    category: { mainCategory: 'ูุดุฑูุจ', subCategory: 'ุณุงุฎู' },
    dietaryPattern: 'ุนุงุฏู',
    mealTime: 'ุตุจุงุญ/ุณูุงู',
    additionalTags: ['ููุจู', 'ุนุฑุจู'],
    price: 8
  },
  {
    name: 'ูุดุฑู',
    description: 'ูุดุฑู ูุตุฑู ุชูููุฏู ูุน ุงูุตูุตุฉ',
    category: { mainCategory: 'ูุฌุจุฉ ุฑุฆูุณูุฉ', subCategory: 'ุฃุฑุฒ/ุนุฏุณ' },
    dietaryPattern: 'ูุจุงุชู',
    mealTime: 'ุบุฏุงุก',
    additionalTags: ['ุดุนุจู', 'ูุตุฑู'],
    price: 18
  },
  {
    name: 'ูุดุงูู ูุดููุฉ',
    description: 'ูุดุงูู ูุญู ูููุชุฉ ูุฏุฌุงุฌ',
    category: { mainCategory: 'ูุฌุจุฉ ุฑุฆูุณูุฉ', subCategory: 'ูุญูู' },
    dietaryPattern: 'ุนุงุฏู',
    mealTime: 'ุบุฏุงุก/ุนุดุงุก',
    additionalTags: ['ูุดููุงุช', 'ุนุฑุจู'],
    price: 45
  },
  {
    name: 'ุดุงูุฑูุง ุฏุฌุงุฌ',
    description: 'ุดุงูุฑูุง ุฏุฌุงุฌ ูุน ุงูุฎุถุงุฑ ูุงูุซูู',
    category: { mainCategory: 'ูุฌุจุฉ ุฑุฆูุณูุฉ', subCategory: 'ุฏูุงุฌู' },
    dietaryPattern: 'ุนุงุฏู',
    mealTime: 'ุบุฏุงุก/ุนุดุงุก',
    additionalTags: ['ุนุฑุจู', 'ููุงุฆู'],
    price: 15
  },
  {
    name: 'ุจุฑุฌุฑ ูุญู',
    description: 'ุจุฑุฌุฑ ูุญู ุทุงุฒุฌ ูุน ุงูุจุทุงุทุณ',
    category: { mainCategory: 'ูุฌุจุฉ ุฑุฆูุณูุฉ', subCategory: 'ุณุงูุฏูุชุด' },
    dietaryPattern: 'ุนุงุฏู',
    mealTime: 'ุบุฏุงุก/ุนุดุงุก',
    additionalTags: ['ุณุฑูุน', 'ุบุฑุจู'],
    price: 28
  },
  {
    name: 'ุจูุชุฒุง ูุงุฑุฌุฑูุชุง',
    description: 'ุจูุชุฒุง ุฅูุทุงููุฉ ููุงุณูููุฉ',
    category: { mainCategory: 'ูุฌุจุฉ ุฑุฆูุณูุฉ', subCategory: 'ูุฎุจูุฒุงุช' },
    dietaryPattern: 'ุนุงุฏู',
    mealTime: 'ุบุฏุงุก/ุนุดุงุก',
    additionalTags: ['ุฅูุทุงูู'],
    price: 35
  }
];

// Sample businesses
const sampleBusinesses = [
  {
    businessName: 'ูุทุนู ุงูุฃุตุงูุฉ',
    businessDescription: 'ูุทุนู ุชุฑุงุซู ููุฏู ุงูุฃููุงุช ุงูุดุนุจูุฉ ุงูุฃุตููุฉ',
    businessType: 'ูุทุนู',
    foodCategories: {
      mainCategories: ['ูุฌุจุฉ ุฑุฆูุณูุฉ', 'ูุดุฑูุจ'],
      subCategories: ['ูุญูู', 'ุฃุฑุฒ/ุนุฏุณ', 'ุณุงุฎู'],
      dietaryOptions: ['ุนุงุฏู', 'ูุจุงุชู'],
      mealTimes: ['ุบุฏุงุก', 'ุนุดุงุก'],
      cuisineStyle: ['ุนุฑุจู', 'ุดุนุจู'],
      foodTags: ['ูุดููุงุช', 'ุทุงุฒุฌ', 'ููุฒูู']
    },
    location: {
      province: 'ุงูุฑูุงุถ',
      city: 'ุงูุฑูุงุถ',
      neighborhood: 'ุงูุนููุง',
      street: 'ุดุงุฑุน ุงูููู ููุฏ',
      coordinates: [46.6753, 24.6877]
    },
    contact: {
      phoneNumber: '0112345678',
      whatsappNumber: '966112345678'
    },
    menuItems: sampleMenuItems.filter(item => 
      ['ูุดุฑู', 'ูุดุงูู ูุดููุฉ', 'ูููุฉ ุนุฑุจูุฉ'].includes(item.name)
    )
  },
  {
    businessName: 'ูุงููู ุงูุตุจุงุญ',
    businessDescription: 'ูุงููู ูุชุฎุตุต ูู ุงููููุฉ ูุงูุฅูุทุงุฑ',
    businessType: 'ูููู',
    foodCategories: {
      mainCategories: ['ุฅูุทุงุฑ', 'ูุดุฑูุจ'],
      subCategories: ['ูุฎุจูุฒุงุช', 'ุณุงุฎู', 'ุจุงุฑุฏ'],
      dietaryOptions: ['ุนุงุฏู'],
      mealTimes: ['ุตุจุงุญ', 'ุณูุงู'],
      cuisineStyle: ['ุบุฑุจู'],
      foodTags: ['ููุจู', 'ุญูููุงุช']
    },
    location: {
      province: 'ุงูุฑูุงุถ',
      city: 'ุงูุฑูุงุถ',
      neighborhood: 'ุงูุญูุฑุงุก',
      street: 'ุดุงุฑุน ุงูุนุฑูุจุฉ',
      coordinates: [46.7219, 24.7136]
    },
    contact: {
      phoneNumber: '0112345679',
      whatsappNumber: '966112345679'
    },
    menuItems: sampleMenuItems.filter(item => 
      ['ูุงูู', 'ูููุฉ ุนุฑุจูุฉ'].includes(item.name)
    )
  },
  {
    businessName: 'ุจุฑุฌุฑ ูุงูุณ',
    businessDescription: 'ูุทุนู ูุฌุจุงุช ุณุฑูุนุฉ ูุชุฎุตุต ูู ุงูุจุฑุฌุฑ',
    businessType: 'ูุฌุจุงุช ุณุฑูุนุฉ',
    foodCategories: {
      mainCategories: ['ูุฌุจุฉ ุฑุฆูุณูุฉ'],
      subCategories: ['ุณุงูุฏูุชุด'],
      dietaryOptions: ['ุนุงุฏู'],
      mealTimes: ['ุบุฏุงุก', 'ุนุดุงุก'],
      cuisineStyle: ['ุบุฑุจู'],
      foodTags: ['ุณุฑูุน']
    },
    location: {
      province: 'ุงูุฑูุงุถ',
      city: 'ุงูุฑูุงุถ',
      neighborhood: 'ุงูุณูููุงููุฉ',
      street: 'ุดุงุฑุน ุงูุชุฎุตุตู',
      coordinates: [46.6863, 24.7136]
    },
    contact: {
      phoneNumber: '0112345680',
      whatsappNumber: '966112345680'
    },
    delivery: {
      isAvailable: true,
      deliveryFees: 10,
      minimumOrder: 30,
      deliveryAreas: ['ุงูุณูููุงููุฉ', 'ุงูุญูุฑุงุก', 'ุงูุนููุง']
    },
    menuItems: sampleMenuItems.filter(item => 
      ['ุจุฑุฌุฑ ูุญู'].includes(item.name)
    )
  }
];

// Seed functions
async function seedFoodCategories() {
  try {
    console.log('๐ฑ Seeding food categories...');
    
    // Clear existing categories
    await FoodCategory.deleteMany({});
    
    // Insert new categories
    const categories = await FoodCategory.insertMany(foodCategoriesData);
    console.log(`โ Created ${categories.length} food categories`);
    
    return categories;
  } catch (error) {
    console.error('โ Error seeding food categories:', error);
    throw error;
  }
}

async function seedBusinesses() {
  try {
    console.log('๐ฑ Seeding businesses...');
    
    // Clear existing businesses
    await Business.deleteMany({});
    
    // Create sample owner (you'll need to create User model for this)
    const sampleOwnerId = new mongoose.Types.ObjectId();
    
    // Add owner to businesses
    const businessesWithOwner = sampleBusinesses.map(business => ({
      ...business,
      owner: sampleOwnerId,
      operatingHours: {
        workingDays: [
          { day: 'Sunday', openTime: '08:00', closeTime: '23:00', isOpen: true },
          { day: 'Monday', openTime: '08:00', closeTime: '23:00', isOpen: true },
          { day: 'Tuesday', openTime: '08:00', closeTime: '23:00', isOpen: true },
          { day: 'Wednesday', openTime: '08:00', closeTime: '23:00', isOpen: true },
          { day: 'Thursday', openTime: '08:00', closeTime: '23:00', isOpen: true },
          { day: 'Friday', openTime: '14:00', closeTime: '23:00', isOpen: true },
          { day: 'Saturday', openTime: '08:00', closeTime: '23:00', isOpen: true }
        ]
      },
      serviceInfo: {
        serviceType: 'fast_food',
        diningOptions: {
          dineIn: true,
          takeaway: true,
          delivery: true
        },
       paymentMethods: ['cash', 'visa', 'mada'],
      },
      status: {
        isVerified: true,
        isOpen: true
      }
    }));
    
    const businesses = await Business.insertMany(businessesWithOwner);
    console.log(`โ Created ${businesses.length} businesses`);
    
    return businesses;
  } catch (error) {
    console.error('โ Error seeding businesses:', error);
    throw error;
  }
}

// Main seeding function
async function seedAll() {
  try {
    await connectDB();
    
    console.log('๐ Starting data seeding...');
    
    await seedFoodCategories();
    await seedBusinesses();
    
    console.log('โ Data seeding completed successfully!');
    
  } catch (error) {
    console.error('โ Data seeding failed:', error);
    process.exit(1);
  } finally {
    await mongoose.connection.close();
    console.log('๐ฆ Database connection closed');
  }
}

// Individual seeding functions for specific data
async function seedCategoriesOnly() {
  await connectDB();
  await seedFoodCategories();
  await mongoose.connection.close();
}

async function seedBusinessesOnly() {
  await connectDB();
  await seedBusinesses();
  await mongoose.connection.close();
}

// Export functions
module.exports = {
  seedAll,
  seedCategoriesOnly,
  seedBusinessesOnly,
  seedFoodCategories,
  seedBusinesses,
  foodCategoriesData,
  sampleMenuItems,
  sampleBusinesses
};

// Run seeding if this file is executed directly
if (require.main === module) {
  seedAll();
}